---
version: "3.9"
networks:
  hoprnet:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  hoprd_data: {}
  exitapp_data: {}

services:
  hoprd:
    image: "${HOPRD_IMAGE}"
    restart: unless-stopped
    pull_policy: always
    platform: linux/amd64
    container_name: hoprd
    hostname: hoprd
    stop_signal: SIGINT
    networks:
      - hoprnet
    ports:
      - "${HOPRD_P2P_PORT}:${HOPRD_P2P_PORT}/tcp"
      - "${HOPRD_P2P_PORT}:${HOPRD_P2P_PORT}/udp"
      - "${HOPRD_API_PORT}:3001"
    env_file:
        - .env-secrets
    environment:
      - "RUST_LOG=${HOPRD_LOG_LEVEL}"
      - RUST_BACKTRACE=full
      - HOPRD_CONFIGURATION_FILE_PATH=/app/hoprd.cfg.yaml
      - HOPRD_API_PORT=3001
      # - OPENTELEMETRY_COLLECTOR_URL=http://server.
    volumes:
      - ./hoprd.cfg.yaml:/app/hoprd.cfg.yaml
      - ./hopr.id:/app/hopr.id
      - ./hoprd-db:/app/hoprd/
      - '/var/run/docker.sock:/var/run/docker.sock'
    deploy:
      resources:
        reservations:
          memory: "${HOPRD_MEM_REQUEST}"
        limits:
          memory: "${HOPRD_MEM_LIMIT}"
    logging:
      driver: json-file
      options:
        max-size: "${HOPRD_LOG_MAX_SIZE}"
        max-file: 5
    profiles:
      - hoprd

  hopr-admin:
    image: "${HOPR_ADMIN_IMAGE}"
    restart: unless-stopped
    container_name: admin
    hostname: admin
    ports:
      - "${HOPR_ADMIN_PORT}:80"
    networks:
      - hoprnet
    deploy:
      resources:
        reservations:
          memory: "${HOPR_ADMIN_MEM_REQUEST}"
        limits:
          memory: "${HOPR_ADMIN_MEM_LIMIT}"
    profiles:
      - admin-ui

  cadvisor:
    image: "${METRICS_CADVISOR_IMAGE}"
    container_name: cadvisor
    hostname: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    #expose:
    #  - "${METRICS_CADVISOR_PORT}"
    ports:
      - "${METRICS_CADVISOR_PORT}:8080"
    networks:
      - hoprnet
    devices:
      - /dev/kmsg:/dev/kmsg
    profiles:
      - metrics
      - metrics-vis

  nodeexporter:
    image: "${METRICS_NODE_EXPORTER_IMAGE}"
    restart: unless-stopped
    container_name: nodeexporter
    hostname: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "${METRICS_NODE_EXPORTER_PORT}:9100"
    networks:
      - hoprnet
    profiles:
      - metrics
      - metrics-vis

  metricspusher:
    image: curlimages/curl:latest
    container_name: metricspusher
    hostname: metricspusher
    command: /bin/sh -c "while true; do curl -s http://hoprd:3001/api/v3/metrics | curl --data-binary @- ${METRICS_PUSH_URL}; sleep 15; done"
    profiles:
      - metrics-push

  prometheus:
    image: "${PROMETHEUS_IMAGE}"
    restart: always
    container_name: prometheus
    hostname: prometheus
    depends_on:
      - cadvisor
      - nodeexporter
    command: |
      --web.listen-address=0.0.0.0:9090
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    environment:
      DATA_RETENTION_DAYS: 30
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - "${PROMETHEUS_CONFIG_FILE}:/etc/prometheus/prometheus.yml"
      - prometheus_data:/prometheus
    networks:
      - hoprnet
    profiles:
      - metrics-vis

  grafana:
    image: "${GRAFANA_IMAGE}"
    user: '472'
    restart: always
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource,yesoreyeram-infinity-datasource'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      - prometheus
    networks:
      - hoprnet
    profiles:
      - metrics-vis

  uhttp-exit-app:
    image: "${UHTTP_EXITAPP_IMAGE}"
    restart: always
    container_name: uhttp-exit-app
    hostname: uhttp-exit-app
    networks:
      - hoprnet
    environment:
      - "DEBUG=*"
      - "UHTTP_EA_DATABASE_FILE=/app/db/store.sqlite3"
      - "UHTTP_EA_DISCOVERY_PLATFORM_ENDPOINT=https://discovery-platform.prod.hoprnet.link"
      - "UHTTP_EA_HOPRD_ENDPOINT=http://hoprd:3001"
    env_file:
        - .env-secrets
    volumes:
        - exitapp_data:/app/db
    deploy:
      resources:
        reservations:
          memory: "${UHTTP_EXITAPP_MEM_REQUEST}"
        limits:
          memory: "${UHTTP_EXITAPP_MEM_LIMIT}"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "7"
    profiles:
      - exit-app
